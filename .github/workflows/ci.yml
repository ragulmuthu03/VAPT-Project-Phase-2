name: VAPT Tool CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # ----------------------------- #
  # üöÄ Build Job
  # ----------------------------- #
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libncurses6 libxml2 nmap tcpdump libexiv2-dev \
                                 build-essential python3-pip libmariadb3 \
                                 libmysqlclient-dev tor konsole geoip-bin \
                                 dnsutils ipcalc traceroute sslscan whatweb
          pip install --upgrade pip
          pip install -r requirements.txt || echo "Skipping pip install"
          pip install texttable matplotlib  # ‚úÖ Added missing package

      - name: Ensure reports directory exists inside project
        run: mkdir -p reports

      - name: Run VAPT Tool (Sanity Check)
        run: |
          python3 tidconsole.py --help || echo "Skipping execution"

  # ----------------------------- #
  # üß™ Test Job (Using Pytest)
  # ----------------------------- #
  test:
    needs: build
    runs-on: ubuntu-latest
    env:
      TERM: xterm  # ‚úÖ Fixes missing terminal variable

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install psutil memory-profiler texttable matplotlib
          sudo apt-get install -y nmap ipcalc geoip-bin

      - name: Ensure reports directory exists inside project
        run: mkdir -p reports

      - name: Run Unit Tests (Pytest)
        run: |
          pytest tests/ --disable-warnings --maxfail=2

  # ----------------------------- #
  # üê≥ Docker Build & Run
  # ----------------------------- #
  docker:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Ensure reports directory exists inside project
        run: mkdir -p reports

      - name: Check if Dockerfile exists
        run: |
          if [ ! -f Dockerfile ]; then
            echo "‚ùå ERROR: Dockerfile not found! Ensure it exists in the root directory."
            exit 1
          fi

      - name: Build and Run Docker Container
        run: |
          docker build -t vapt-tool .
          docker run --rm vapt-tool --help || echo "Skipping execution"

  # ----------------------------- #
  # üöÄ Deployment (Optional)
  # ----------------------------- #
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Ensure reports directory exists inside project
        run: mkdir -p reports

      - name: Deploy to Server (Example)
        run: |
          echo "üöÄ Deploying VAPT tool..."
          # Add deployment commands here (e.g., SCP, SSH, Kubernetes)

