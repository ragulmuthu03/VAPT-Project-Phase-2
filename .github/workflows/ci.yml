name: VAPT Tool CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # ----------------------------- #
  # üöÄ Build Job
  # ----------------------------- #
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libncurses6 libxml2 nmap tcpdump libexiv2-dev build-essential \
                                 python3-pip libmariadb3 libmysqlclient-dev tor konsole
          pip install --upgrade pip
          pip install -r requirements.txt || echo "Skipping pip install"

      - name: Run VAPT Tool (Sanity Check)
        run: |
          python3 tidconsole.py --help || echo "Skipping execution"

  # ----------------------------- #
  # üß™ Test Job
  # ----------------------------- #
  test:
    needs: build
    runs-on: ubuntu-latest
    env:
      TERM: xterm  # ‚úÖ Fixes missing terminal variable

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install psutil memory-profiler matplotlib  # ‚úÖ Ensures all required packages

      - name: Run Unit Tests
        run: |
          python -m unittest discover -s tests -p "*.py"

  # ----------------------------- #
  # üöÄ Performance Benchmarking Job
  # ----------------------------- #
  performance:
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r requirements.txt
          pip install psutil memory-profiler matplotlib

      - name: Install Security Tools for Comparison
        run: |
          sudo apt-get install -y nmap whatweb curl dnsutils traceroute sslscan
          pip install theHarvester  # ‚úÖ Ensure theHarvester is installed properly

      - name: Run Performance Tests (VAPT Tool)
        run: |
          python3 tests/test_performance.py --mode=vapt

      - name: Run Performance Tests (Other Tools)
        run: |
          python3 tests/test_performance.py --mode=tools

      - name: Merge Performance Test Results
        run: |
          cat reports/vapt_performance.txt reports/tools_performance.txt > reports/performance_comparison.txt

      - name: Upload Performance Test Results
        uses: actions/upload-artifact@v4
        with:
          name: performance-test-results
          path: reports/performance_comparison.txt

      - name: Upload Performance Graphs
        uses: actions/upload-artifact@v4
        with:
          name: performance-graphs
          path: reports/*.png

  # ----------------------------- #
  # üê≥ Docker Build & Run
  # ----------------------------- #
  docker:
    needs: performance
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Check if Dockerfile exists
        run: |
          if [ ! -f Dockerfile ]; then
            echo "‚ùå ERROR: Dockerfile not found! Ensure it exists in the root directory."
            exit 1
          fi

      - name: Build and Run Docker Container
        run: |
          docker build -t vapt-tool .
          docker run --rm vapt-tool --help || echo "Skipping execution"

  # ----------------------------- #
  # üöÄ Deployment (Optional)
  # ----------------------------- #
  deploy:
    needs: docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Deploy to Server (Example)
        run: |
          echo "üöÄ Deploying VAPT tool..."
          # Add deployment commands here (e.g., SCP, SSH, Kubernetes)

